// Generated by Bisonc++ V4.01.00 on Fri, 01 Mar 2013 11:08:35 +0100

    // Include this file in the sources of the class Parser.

// $insert class.h
#include "ppparser.h"

// $insert namespace-open
namespace Preprocessor
{

inline void Parser::error(char const *msg)
{
    std::cerr << msg << '\n';
}

inline void Parser::print()         
{
    print__();           // displays tokens if --print was specified
}

inline int Parser::lex()
{
    int token = d_scanner.lex();
    
    switch (token)
    {
        case FUNNAME:
        case VAR:
            d_val__.get<Tag__::STRING>() = d_scanner.matched();
            break;
            
        case CHR:
            d_val__.get<Tag__::CHAR>() = d_scanner.matched()[0];
        
        default:
            break;
    }
    
    return token;
}


// $insert namespace-close
}

    // Add here includes that are only required for the compilation 
    // of Parser's sources.


// $insert namespace-use
    // UN-comment the next using-declaration if you want to use
    // symbols from the namespace Preprocessor without specifying Preprocessor::
//using namespace Preprocessor;

    // UN-comment the next using-declaration if you want to use
    // int Parser's sources symbols from the namespace std without
    // specifying std::

using namespace std;
using namespace Preprocessor;
